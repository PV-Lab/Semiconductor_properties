%This function was written on 7/18/2015 to calculate the generation rate
%through a sample given a certain number of "passes" through the sample
%thickness due to internal reflectance. A simple model is assumed. The
%input parameters are:
%E: incident energy on the system, in J
%pump_wavelength: wavelength of beam generating carriers, in nm
%thickness: sample thickness, in microns
%sampleT: measured sample temperature at the time of the measurement, in K
%windowT: measured window temperature at the time of the measurement, in K
%model: band-to-band absorption model to be used in the calculation, either
%'Green' or 'Sturm
%n: number of passes through the sample, or number of internal reflections
%NOT INCLUDING the initial pass
%d: diameter of the incident beam, in cm

function [G] = calcG_multipleR(E,pump_wavelength,thickness,sampleT,windowT,model,n,d)

h = 6.63e-34; %Js
c = 3e8; %m/s

%photon energy
E_ph = h*c/(pump_wavelength*1e-9); %J/photon

%Beam parameters
radius = d/2; %cm
area = pi*(radius^2); %cm^2

%Beam energy density
E_density = E/area; %J/cm2

%Cut the incident beam energy according to the transmission by quartz. Use
%this function if the beam energy is NOT measured with the quartz plate in
%place.
% E_density = quartz(E_density,windowT); 

%photon density incident on the sample before any absorption
photon_density = E_density/E_ph; %photons/cm2

%Get the reflectivity
[R] = Green_R(sampleT,pump_wavelength); 

if strcmp(model,'Green')==1
    %Get the absorption coefficient according to Green 2008
    [aBG] = Green_aBG(sampleT,pump_wavelength);
elseif strcmp(model,'Sturm')==1
    %Get the absorption coefficient according to Sturm 1992
    [aBG] = Sturm_aBG(sampleT,pump_wavelength);
else
    error('Model specification incorrect');
end

%Integral of simple generation rate according to Green, averaged over the
%wafer thickness. Note that this is ALSO averaged over the pump time of 6
%ns. 
G(1) = (1-R)*photon_density*(1-exp(-aBG*thickness*1e-4))/(thickness*1e-4); 

%Attenuated beam after absorption
I = photon_density*exp(-aBG*thickness*1e-4); 

%Now look at all of the passes
count = 1;
while count<=n 
    
    I_R = I*R; %we only care about the rays that are reflected by the back surface. This is opposite to the initial reflectance. 
    
    G_thisPass = I_R*(1-exp(-aBG*thickness*1e-4))/(thickness*1e-4);
    G(count+1) = G_thisPass; 
    
    I = I_R*exp(-aBG*thickness*1e-4); 
    
    count = count+1; 
  
end

figure; 
plot(G,'o','MarkerSize',10);
xlabel('Number of passes'); 
ylabel('Excess carriers generated by each pass'); 
    